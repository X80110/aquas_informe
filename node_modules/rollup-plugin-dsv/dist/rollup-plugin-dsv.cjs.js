'use strict';

function _interopDefault (ex) { return 'default' in ex ? ex['default'] : ex; }

var path = require('path');
var d3Dsv = require('d3-dsv');
var toSource = _interopDefault(require('tosource'));
var rollupPluginutils = require('rollup-pluginutils');

var parsers = { '.csv': d3Dsv.csv, '.tsv': d3Dsv.tsv };

function dsv ( options ) {
	if ( options === void 0 ) options = {};

	var filter = rollupPluginutils.createFilter( options.include, options.exclude );

	return {
		name: 'dsv',

		transform: function transform ( code, id ) {
			if ( !filter( id ) ) return null;

			var ext = path.extname( id );
			if ( !( ext in parsers ) ) return null;

			var rows = parsers[ ext ].parse( code );

			if ( options.processRow ) {
				rows = rows.map( function (row) { return options.processRow( row, id ) || row; } );
			}

			return {
				code: ("export default " + (toSource( rows )) + ";"),
				map: { mappings: '' }
			};
		}
	};
}

module.exports = dsv;